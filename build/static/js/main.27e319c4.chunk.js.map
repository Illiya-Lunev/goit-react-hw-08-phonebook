{"version":3,"sources":["redux/Auth/auth-selectors.js","components/Navigations/Navigations.js","AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PublicRoute/PublicRoute.js","components/PrivateRoute/PrivateRoute.js","App.js","redux/reducer.js","redux/Auth/auth-slice.js","redux/store.js","index.js","redux/Auth/auth-operations.js","components/Navigations/navigations.module.css","redux/actions.js","components/UserMenu/userMenu.module.css","components/AppBar/appBar.module.css"],"names":["authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetching","isFetching","Navigation","useSelector","className","s","link","activeClassName","activeLink","exact","to","AuthNav","UserMenu","dispatch","useDispatch","user_menu","user_menu_title","user_menu_title_name","user_menu_btn","type","onClick","logOut","AppBar","header","PublicRoute","restricted","redirectTo","children","routeProps","shouldRedirect","PrivateRoute","component","HomeView","lazy","RegisterView","LoginView","ContactView","App","useEffect","fetchCurrentUser","fallback","color","height","width","timeout","display","loader","path","items","createReducer","getContactsSuccess","_","payload","deleteContactsSuccess","filter","contact","id","addContactsSuccess","changeFilter","contactsReducer","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","register","fulfilled","logIn","_action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","thunkAPI","getState","persistedToken","get","module","exports","addContactsRequests","createAction","addContactsError","deleteContactsRequests","deleteContactsError","getContactsRequests","getContactsError"],"mappings":"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","file":"static/js/main.27e319c4.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserName = state => state.auth.user.name;\r\nconst getIsFetching = state => state.auth.isFetching;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getIsFetching,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './navigations.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/Auth/auth-selectors';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink className={s.link} activeClassName={s.activeLink} exact to=\"/\">\r\n        Home\r\n      </NavLink>\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          className={s.link}\r\n          activeClassName={s.activeLink}\r\n          to=\"/contacts\"\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './components/Navigations/navigations.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <nav>\r\n      <NavLink className={s.link} activeClassName={s.activeLink} to=\"/register\">\r\n        Registration\r\n      </NavLink>\r\n      <NavLink className={s.link} activeClassName={s.activeLink} to=\"/login\">\r\n        Log In\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/Auth/auth-selectors';\r\nimport { logOut } from '../../redux/Auth/auth-operations';\r\nimport s from './userMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  return (\r\n    <div className={s.user_menu}>\r\n      <p className={s.user_menu_title}>\r\n        Welcome,<span className={s.user_menu_title_name}>{name}</span>\r\n      </p>\r\n      <button\r\n        className={s.user_menu_btn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(logOut())}\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import Navigation from '../Navigations/Navigations';\r\nimport s from './appBar.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport AuthNav from '../../AuthNav';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nimport authSelectors from '../../redux/Auth/auth-selectors';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport authSelectors from '../../redux/Auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../../redux/Auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  redirectTo = '/',\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect, lazy, Suspense } from 'react';\nimport { Switch } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport AppBar from './components/AppBar/AppBar.js';\nimport s from './components/AppBar/appBar.module.css';\nimport authSelectors from './redux/Auth/auth-selectors';\nimport { fetchCurrentUser } from './redux/Auth/auth-operations';\nimport PublicRoute from './components/PublicRoute/PublicRoute.js';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute.js';\n\nconst HomeView = lazy(() =>\n  import('./Views/HomeView' /* webpackChunkName: \"home-page\" */),\n);\n\nconst RegisterView = lazy(() =>\n  import('./Views/RegisterView' /* webpackChunkName: \"register-page\" */),\n);\n\nconst LoginView = lazy(() =>\n  import('./Views/LoginView' /* webpackChunkName: \"login-page\" */),\n);\n\nconst ContactView = lazy(() =>\n  import('./Views/ContactView' /* webpackChunkName: \"contact-page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return !isFetching ? (\n    <div>\n      <AppBar />\n      <Suspense\n        fallback={\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n            display=\"flex\"\n            justify-content=\"center\"\n            className={s.loader}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute>\n            <ContactView path=\"/contacts\" redirectTo=\"/login\" />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  ) : null;\n}\n","import { combineReducers } from 'redux';\r\nimport {\r\n  addContactsSuccess,\r\n  deleteContactsSuccess,\r\n  getContactsSuccess,\r\n  changeFilter,\r\n} from './actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { register, logIn, logOut, fetchCurrentUser } from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetching: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logIn.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, _action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [fetchCurrentUser.pending](state) {\r\n      state.isFetching = true;\r\n    },\r\n    [fetchCurrentUser.fulfilled](state, { payload }) {\r\n      state.user = payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetching = false;\r\n    },\r\n    [fetchCurrentUser.rejected](state) {\r\n      state.isFetching = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// Ссылка на локал Сторедж\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './reducer';\r\nimport authReducer from './Auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n// Конфигурация локал  сторедж\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error.data);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.data);\r\n    }\r\n  },\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"navigations_link__1pvqB\",\"activeLink\":\"navigations_activeLink__55gpF navigations_link__1pvqB\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactsRequests = createAction('contacts/addRequests');\r\nexport const addContactsSuccess = createAction('contacts/addSuccess');\r\nexport const addContactsError = createAction('contacts/addError');\r\n\r\nexport const deleteContactsRequests = createAction('contacts/deleteRequests');\r\nexport const deleteContactsSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactsError = createAction('contacts/deleteError');\r\n\r\nexport const getContactsRequests = createAction('contacts/getRequests');\r\nexport const getContactsSuccess = createAction('contacts/getSuccess');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\nexport const changeFilter = createAction('contacts/FILTER');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_menu\":\"userMenu_user_menu__1_FfY\",\"user_menu_btn\":\"userMenu_user_menu_btn__3zk9s\",\"user_menu_title\":\"userMenu_user_menu_title__2vki7\",\"user_menu_title_name\":\"userMenu_user_menu_title_name__lsUq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"appBar_header__180C3\",\"loader\":\"appBar_loader__2x8pV\"};"],"sourceRoot":""}