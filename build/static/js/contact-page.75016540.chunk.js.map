{"version":3,"sources":["components/Filters/filters.module.css","apiService.js","redux/selectors.js","components/FormPhoneBook/FormPhoneBook.jsx","redux/operations.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filters/Filters.jsx","Views/ContactView.js","components/FormPhoneBook/formPhone.module.css","components/ContactList/contacts.module.css"],"names":["module","exports","axios","defaults","baseURL","addContactsApi","name","number","id","post","then","data","catch","err","deleteContactsApi","contactId","delete","getContactsFilter","state","contacts","filter","getContactsList","items","FormPhoneBook","useState","setName","setNumber","dispatch","useDispatch","useSelector","uuidv4","onSubmit","a","addContactsRequests","contactsAdd","addContactsSuccess","addContactsError","addContact","handleChange","e","currentTarget","value","className","s","form","preventDefault","some","item","toLowerCase","isContactExist","Notiflix","Report","warning","label","input","type","pattern","title","required","onChange","btn","ContactItem","onDeleteContact","onClick","ContactList","useEffect","getContactsRequests","get","contactsGet","getContactsSuccess","getContactsError","list","includes","map","deleteContactsRequests","deleteContactsSuccess","deleteContactsError","Filter","changeFilter","target","ContactView"],"mappings":"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","file":"static/js/contact-page.75016540.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filters_label__J7Wfh\",\"input\":\"filters_input__1dodB\"};","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const addContactsApi = ({ name, number, id }) => {\r\n  return axios\r\n    .post('/contacts', { name, number, id })\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const getContactsApi = () => {\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const deleteContactsApi = contactId => {\r\n  return axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n","export const getContactsFilter = state => state.contacts.filter;\r\nexport const getContactsList = state => state.contacts.items;\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './formPhone.module.css';\nimport { addContact } from '../../redux/operations';\nimport { getContactsList } from '../../redux/selectors';\nimport { v4 as uuidv4 } from 'uuid';\nimport Notiflix from 'notiflix';\n\n// Пропсы передаем в функцию как параметры\nexport default function FormPhoneBook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const items = useSelector(getContactsList);\n  const id = uuidv4();\n\n  const onSubmit = () => dispatch(addContact({ name, number, id }));\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    // Делаем свич\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContactExist = name => {\n      return items.some(item => item.name.toLowerCase() === name.toLowerCase());\n    };\n    isContactExist(name)\n      ? Notiflix.Report.warning(\n          `Such a ${name} already exists!`,\n          'Please enter another name',\n          'Okay',\n        )\n      : onSubmit(name, number);\n    // очистка вместо ресета\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и\n                пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n                Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add to contacts\n      </button>\n    </form>\n  );\n}\n","import {\r\n  addContactsRequests,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequests,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  getContactsRequests,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n} from './actions';\r\n\r\nimport {\r\n  addContactsApi,\r\n  getContactsApi,\r\n  deleteContactsApi,\r\n} from '../apiService';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(getContactsRequests());\r\n  try {\r\n    const contactsGet = await getContactsApi();\r\n    dispatch(getContactsSuccess(contactsGet));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number, id }) =>\r\n  async dispatch => {\r\n    dispatch(addContactsRequests());\r\n    try {\r\n      const contactsAdd = await addContactsApi({ name, number, id });\r\n      dispatch(addContactsSuccess(contactsAdd));\r\n    } catch (error) {\r\n      dispatch(addContactsError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContacts = contactId => async dispatch => {\r\n  dispatch(deleteContactsRequests());\r\n  try {\r\n    await deleteContactsApi(contactId);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error));\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './contacts.module.css';\r\n\r\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.name}>{name}</span>\r\n      <span className={s.name}>{number}</span>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import ContactItem from './ContactItem';\r\nimport s from './contacts.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContacts, fetchContacts } from '../../redux/operations';\r\nimport { getContactsFilter, getContactsList } from '../../redux/selectors';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ContactList() {\r\n  const filter = useSelector(getContactsFilter);\r\n  const contacts = useSelector(getContactsList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts\r\n        .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n        .map(({ name, id, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => dispatch(deleteContacts(id))}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport s from './filters.module.css';\r\nimport { changeFilter } from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}> Find contacts by name:</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import FormPhoneBook from '../components/FormPhoneBook/FormPhoneBook';\r\nimport ContactList from '../components/ContactList/ContactList.jsx';\r\nimport Filter from '../components/Filters/Filters.jsx';\r\nimport s from '../components/FormPhoneBook/formPhone.module.css';\r\n\r\nexport default function ContactView() {\r\n  return (\r\n    <div>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <FormPhoneBook />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formPhone_form__3FVX9\",\"label\":\"formPhone_label__6dsCT\",\"input\":\"formPhone_input__3O0Xv\",\"btn\":\"formPhone_btn__2F0Af\",\"title\":\"formPhone_title__20oi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__6RaOG\",\"btn\":\"contacts_btn__2aO8I\",\"item\":\"contacts_item__3Rxx1\",\"name\":\"contacts_name__3xMh0\"};"],"sourceRoot":""}