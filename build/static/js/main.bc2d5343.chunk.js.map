{"version":3,"sources":["components/Filters/filters.module.css","redux/actions.js","components/FormPhoneBook/FormPhoneBook.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filters/Filters.jsx","App.js","redux/reducer.js","redux/store.js","index.js","components/FormPhoneBook/formPhone.module.css","components/ContactList/contacts.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","FormPhoneBook","useState","setName","setNumber","dispatch","useDispatch","items","useSelector","state","contacts","handleChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","some","item","toLowerCase","isContactExist","alert","label","input","type","pattern","title","required","onChange","btn","ContactItem","onDeleteContact","onClick","ContactList","filter","list","includes","map","Filter","target","App","createReducer","contact","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,MAAQ,yB,yHCE5CC,EAAaC,YAAa,gBAAgB,YAAuB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC9D,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAKOI,EAAgBN,YAAa,mBAC7BO,EAAeP,YAAa,mB,OCP1B,SAASQ,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOP,EAAP,KAAeS,EAAf,KAEMC,EAAWC,cAEXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,SAI5CI,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MAEd,OAAQpB,GACN,IAAK,OACHS,EAAQW,GACR,MACF,IAAK,SACHV,EAAUU,GACV,MACF,QACE,SAiBN,OACE,uBAAMC,UAAWC,IAAEC,KAAMC,SAdN,SAAAN,GACnBA,EAAEO,kBACqB,SAAAzB,GACrB,OAAOa,EAAMa,MAAK,SAAAC,GAAI,OAAIA,EAAK3B,KAAK4B,gBAAkB5B,EAAK4B,iBAE7DC,CAAe7B,GAtBMW,EAASb,EAAW,CAAEE,OAAMC,YAuB7C6B,MAAM,GAAD,OAAI9B,EAAJ,6BAGTS,EAAQ,IACRC,EAAU,KAIV,UACE,wBAAOW,UAAWC,IAAES,MAApB,iBAEE,uBACEV,UAAWC,IAAEU,MACbC,KAAK,OACLjC,KAAK,OACLoB,MAAOpB,EACPkC,QAAQ,yHACRC,MAAM,kcAGNC,UAAQ,EACRC,SAAUpB,OAGd,wBAAOI,UAAWC,IAAES,MAApB,mBAEE,uBACEV,UAAWC,IAAEU,MACbC,KAAK,MACLjC,KAAK,SACLoB,MAAOnB,EACPiC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUpB,OAGd,wBAAQI,UAAWC,IAAEgB,IAAKL,KAAK,SAA/B,gC,oBCxES,SAASM,EAAT,GAA6D,IAAtCpC,EAAqC,EAArCA,GAAIH,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQuC,EAAmB,EAAnBA,gBACtD,OACE,qBAAInB,UAAWC,IAAEK,KAAjB,UACE,sBAAMN,UAAWC,IAAEtB,KAAnB,SAA0BA,IAC1B,sBAAMqB,UAAWC,IAAEtB,KAAnB,SAA0BC,IAC1B,wBACEoB,UAAWC,IAAEgB,IACbL,KAAK,SACLQ,QAAS,kBAAMD,EAAgBrC,IAHjC,uBCHS,SAASuC,IACtB,IAAMC,EAAS7B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS2B,UAC7C3B,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,SAE/CF,EAAWC,cAEjB,OACE,oBAAIS,UAAWC,IAAEsB,KAAjB,SACG5B,EACE2B,QAAO,SAAAhB,GAAI,OAAIA,EAAK3B,KAAK4B,cAAciB,SAASF,EAAOf,kBACvDkB,KAAI,gBAAG9C,EAAH,EAAGA,KAAMG,EAAT,EAASA,GAAIF,EAAb,EAAaA,OAAb,OACH,cAACsC,EAAD,CAEEvC,KAAMA,EACNC,OAAQA,EACRuC,gBAAiB,kBAAM7B,EAASN,EAAcF,MAHzCA,Q,qBCbF,SAAS4C,IACtB,IAAM3B,EAAQN,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS2B,UAC5ChC,EAAWC,cAEjB,OACE,qCACE,uBAAOS,UAAWC,IAAES,MAApB,qCACA,uBACEV,UAAWC,IAAEU,MACbC,KAAK,OACLjC,KAAK,SACLoB,MAAOA,EACPiB,SAAU,SAAAnB,GAAC,OAAIP,EAASL,EAAaY,EAAE8B,OAAO5B,cCXvC,SAAS6B,IACtB,OACE,gCACE,oBAAI5B,UAAWC,IAAEa,MAAjB,uBACA,cAAC5B,EAAD,IACA,oBAAIc,UAAWC,IAAEa,MAAjB,sBACA,cAACY,EAAD,IACA,cAACL,EAAD,O,sECRA7B,EAAQqC,YAAc,IAAD,mBACxB7C,GAAgB,SAACU,EAAD,OAAUb,EAAV,EAAUA,QAAV,OACfa,EAAM4B,QAAO,SAAAQ,GAAO,OAAIA,EAAQhD,KAAOD,QAFhB,cAGxBJ,GAAa,SAACiB,EAAD,OAAUb,EAAV,EAAUA,QAAV,4BAA4Ba,GAA5B,CAAmCb,OAHxB,IAMrByC,EAASO,YAAc,GAAD,eACzB5C,GAAe,SAAC8C,EAAD,YAAMlD,YAQTmD,EALSC,YAAgB,CACtCzC,QACA8B,WCAIY,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPxD,SAAUyD,YAAeP,EAAuBb,IAElDE,aACAmB,UAAUC,IAGNC,EAAYC,YAAaP,G,QChC/BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaW,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC3B,EAAD,UAINiC,SAASC,eAAe,U,kBCd1BvF,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,IAAM,uBAAuB,MAAQ,2B,kBCAxJD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,IAAM,sBAAsB,KAAO,uBAAuB,KAAO,0B","file":"static/js/main.bc2d5343.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filters_label__J7Wfh\",\"input\":\"filters_input__1dodB\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/ADD', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction('contacts/DELETE');\r\nexport const changeFilter = createAction('contacts/FILTER');\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport s from './formPhone.module.css';\nimport { addContact } from '../../redux/actions';\n\n// Пропсы передаем в функцию как параметры\nexport default function FormPhoneBook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const items = useSelector(state => state.contacts.items);\n\n  const onSubmit = () => dispatch(addContact({ name, number }));\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    // Делаем свич\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContactExist = name => {\n      return items.some(item => item.name.toLowerCase() === name.toLowerCase());\n    };\n    isContactExist(name)\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit(name, number);\n    // очистка вместо ресета\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и\n                пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n                Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add to contacts\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\r\nimport s from './contacts.module.css';\r\n\r\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.name}>{name}</span>\r\n      <span className={s.name}>{number}</span>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import ContactItem from './ContactItem';\r\nimport s from './contacts.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\n\r\nexport default function ContactList() {\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts\r\n        .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n        .map(({ name, id, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => dispatch(deleteContact(id))}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport s from './filters.module.css';\r\nimport { changeFilter } from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}> Find contacts by name:</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import FormPhoneBook from './components/FormPhoneBook/FormPhoneBook.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filters/Filters.jsx';\nimport s from './components/FormPhoneBook/formPhone.module.css';\n\nexport default function App() {\n  return (\n    <div>\n      <h1 className={s.title}>Phonebook</h1>\n      <FormPhoneBook />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// Ссылка на локал Сторедж\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n// Конфигурация локал  сторедж\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formPhone_form__3FVX9\",\"label\":\"formPhone_label__6dsCT\",\"input\":\"formPhone_input__3O0Xv\",\"btn\":\"formPhone_btn__2F0Af\",\"title\":\"formPhone_title__20oi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__6RaOG\",\"btn\":\"contacts_btn__2aO8I\",\"item\":\"contacts_item__3Rxx1\",\"name\":\"contacts_name__3xMh0\"};"],"sourceRoot":""}